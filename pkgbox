#!/usr/bin/env bash
################################################################################
# pkgbox - The build toolbox
# 
# Copyright 2012, 2013  Dominik D. Geyer <dominik.geyer@gmail.com>
# License: GPLv3 (see file LICENSE)
################################################################################

set -o errexit -o errtrace -o pipefail -o nounset

# unset all aliases
unalias -a

# test for too old bash version
if (( BASH_VERSINFO[0] < 4 )); then
	echo "Error: This script requires a bash version >= 4.0 (got $BASH_VERSION). Exiting." >&2
	exit 1
fi

# debug: remember initial variables on script start
__VARS=$(set -o posix; set)

# determine absolute location of script
declare -r PKGBOX_PATH=$(dirname "$(readlink -f "$BASH_SOURCE")")

# include basic lib
source "$PKGBOX_PATH/include/basic.sh" || { echo "Fatal error: Cannot find basic helpers" >&2; exit 1; }

# core variables
declare -i PKGBOX_VERBOSITY=1
declare -A PKGBOX_OPTS
declare -A PKGBOX_OPTS_USR
declare -A PKGBOX_DIR


# trap signals: 1/HUP, 2/INT, 3/QUIT, 15/TERM and special ERR and EXIT
trap 'pkgbox_trap_handler ${?-99} "${BASH_COMMAND-}" "${BASH_SOURCE-}" "${LINENO-}"' HUP INT QUIT TERM ERR EXIT


################################################################################
# parse options
while getopts ":vqD:V:Th" opt; do
	case $opt in
	v)	# be verbose; each -v increases the verbosity level
		(( ++PKGBOX_VERBOSITY )) || :
		;;
	q)	# be quiet; each -q decreases the verbosity level
		(( --PKGBOX_VERBOSITY )) || :
		;;
	V)	# override package version
		PV=$OPTARG
		;;
	D)	# defines a special config variable
		PKGBOX_OPTS_USR[${OPTARG%%=*}]=${OPTARG#*=}
		;;
	T)	# mark for running test suite
		PKGBOX_TEST=1
		;;
	h)	# just display help message and exit with success
		pkgbox_usage >&2
		pkgbox_exit 0
		;;
	\?)
		echo "Error: Invalid option -$OPTARG" >&2
		pkgbox_usage >&2
		pkgbox_exit 1
		;;
	:)
		echo "Error: Option -$OPTARG requires an argument" >&2
		pkgbox_usage >&2
		pkgbox_exit 1
		;;
	esac
done

# shift options and unset variables used for option parsing
shift $((OPTIND-1))
unset opt OPTIND

# the package and action are required arguments (in non-test mode)
if [[ ! ${PKGBOX_TEST-} ]]; then
	if (( $# < 1 || $# > 2 )); then
		pkgbox_usage >&2
		pkgbox_exit 1
	fi

	declare -r PKGBOX_PACKAGE=$1
	declare -r PKGBOX_ACTION=${2:-info}
fi

################################################################################
# include config(s)
for c in /etc/pkgbox "${PKGBOX_OPTS_USR[base]:-"$HOME/.pkgbox"}/conf" "${PKGBOX_OPTS_USR[config]-}"; do
	if [[ -f $c ]]; then
		pkgbox_msg info "Including config '$c'"
		source "$c"
	fi
done
unset c

# override config options with user-provided options (via option -D)
for o in "${!PKGBOX_OPTS_USR[@]}"; do
	pkgbox_msg debug "Overriding option $o"
	PKGBOX_OPTS[$o]=${PKGBOX_OPTS_USR[$o]}
done
unset PKGBOX_OPTS_USR

# debug output all options
if (( ${#PKGBOX_OPTS[@]} > 0 )); then
	# FIXME: try using pkgbox_debug_vars()
	for o in "${!PKGBOX_OPTS[@]}"; do
		pkgbox_msg debug "OPTION: $(printf '% 15s' "$o") = '${PKGBOX_OPTS[$o]}'"
	done
fi
unset o

################################################################################
# general setup

# allow override base-dir via option
[[ ${PKGBOX_OPTS[base]-} ]] && PKGBOX_DIR[base]="${PKGBOX_OPTS[base]}"

# pkgbox directories
: ${PKGBOX_DIR[base]:="$HOME/.pkgbox"}
: ${PKGBOX_DIR[download]:="${PKGBOX_DIR[base]}/download"}
: ${PKGBOX_DIR[work]:="${PKGBOX_DIR[base]}/work"}
: ${PKGBOX_DIR[temp]:="${PKGBOX_DIR[base]}/temp"}
: ${PKGBOX_DIR[packages]:="$PKGBOX_PATH/pkg"}

# create directories
for d in "${PKGBOX_DIR[@]}"; do
	if [[ ! -d $d ]]; then
		pkgbox_msg info "Creating pkgbox directory '$d'"
		mkdir -p "$d" || pkgbox_die "Cannot create pkgbox directory '$d'" 2
	fi
done
unset d


# set default install-prefix, if not already set via option
: ${PKGBOX_OPTS[prefix]:="/usr/local"}

################################################################################
# include required libraries
pkgbox_include "include/build.sh"
pkgbox_include "include/utils.sh"

################################################################################
# main
if [[ ! ${PKGBOX_TEST-} ]]; then
	pkgbox_msg info  "Performing action '$PKGBOX_ACTION' on package '$PKGBOX_PACKAGE'"
	
	pkgbox_action "$PKGBOX_ACTION" "$PKGBOX_PACKAGE"
else
	# test mode
	pkgbox_include "include/_coretest.sh"
	_run_tests
fi

################################################################################
# debug mode: show variables defined by this script
if (( PKGBOX_VERBOSITY > 3 )); then
	pkgbox_msg debug "Variables defined by this script:"
	grep -vFe "$__VARS" <<<"$(set -o posix; set)" | grep -v "^__VARS=" >&2
fi

################################################################################
# exit with success (turns off EXIT trap)
pkgbox_exit

