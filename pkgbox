#!/usr/bin/env bash

set -eE  #x
set -o pipefail		# http://petereisentraut.blogspot.de/2010/11/pipefail.html

# debug: remember initial variables on script start
__VARS="$(set -o posix; set)"

# determine absolute location of script
declare -r PKGBOX_PATH="$(dirname "$(readlink -f "$BASH_SOURCE")")"

# include basic lib
source "include/basic.sh" || { echo "Fatal error: Cannot find basic helpers" >&2; exit 1; }

# trap non-normal exit signals: 1/HUP, 2/INT, 3/QUIT, 15/TERM, ERR
# http://fvue.nl/wiki/Bash:_Error_handling
trap 'pkgbox_die $FUNCNAME ${10:-$?}' 1 2 3 15 ERR

################################################################################

declare -i PKGBOX_VERBOSITY=0
declare -A PKGBOX_OPTS

while getopts ":vD:h" opt; do
	case $opt in
	# be verbose; each -v adds to the verbosity level
	v)
		PKGBOX_VERBOSITY=$((PKGBOX_VERBOSITY + 1))
		;;
	# defines a special config variable... just a test for now
	D)
		PKGBOX_OPTS[${OPTARG%%=*}]="${OPTARG#*=}"
		;;
	h)
		pkgbox_usage >&2
		exit 0
		;;
	\?)
		pkgbox_die "Invalid option: -$OPTARG"
		;;
	:)
		pkgbox_die "Option -$OPTARG requires an argument"
		;;
	esac
done

shift $((OPTIND-1))		# shift options
unset opt OPTIND		# unset variables used for option parsing

# the action and script are required arguments
if [[ $# < 2 ]]; then
	pkgbox_usage >&2
	exit 1
fi

declare -r PKGBOX_ACTION="$1"
declare -r PKGBOX_SCRIPT="$2"

################################################################################

(( PKGBOX_VERBOSITY > 2 )) && echo "Verbosity is set to DEBUG (value: $PKGBOX_VERBOSITY)"

################################################################################

#pkgbox_is_function pkgbox_usage || pkgbox_die "pkgbox_usage is no function"
#pkgbox_is_function foobar || pkgbox_die "foobar is no function"
#echo ${PKGBOX_OPTS[test]}
#pkgbox_echo -n -e "\nHello\t$(_sgr bold)dear$(_sgr) friend: welcome$(_sgr reverse)"



################################################################################
# debug: show variables defined by this script
#(grep -vFe "$__VARS" <<<"$(set -o posix; set)" | grep -v ^__VARS=) | less

